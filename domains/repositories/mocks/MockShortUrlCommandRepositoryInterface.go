// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"
	entities "short-url/domains/entities"

	mock "github.com/stretchr/testify/mock"
)

// MockShortUrlCommandRepositoryInterface is an autogenerated mock type for the ShortUrlCommandRepositoryInterface type
type MockShortUrlCommandRepositoryInterface struct {
	mock.Mock
}

type MockShortUrlCommandRepositoryInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockShortUrlCommandRepositoryInterface) EXPECT() *MockShortUrlCommandRepositoryInterface_Expecter {
	return &MockShortUrlCommandRepositoryInterface_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: ctx, shortUrl
func (_m *MockShortUrlCommandRepositoryInterface) Save(ctx context.Context, shortUrl *entities.ShortUrl) error {
	ret := _m.Called(ctx, shortUrl)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entities.ShortUrl) error); ok {
		r0 = rf(ctx, shortUrl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockShortUrlCommandRepositoryInterface_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type MockShortUrlCommandRepositoryInterface_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//   - ctx context.Context
//   - shortUrl *entities.ShortUrl
func (_e *MockShortUrlCommandRepositoryInterface_Expecter) Save(ctx interface{}, shortUrl interface{}) *MockShortUrlCommandRepositoryInterface_Save_Call {
	return &MockShortUrlCommandRepositoryInterface_Save_Call{Call: _e.mock.On("Save", ctx, shortUrl)}
}

func (_c *MockShortUrlCommandRepositoryInterface_Save_Call) Run(run func(ctx context.Context, shortUrl *entities.ShortUrl)) *MockShortUrlCommandRepositoryInterface_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*entities.ShortUrl))
	})
	return _c
}

func (_c *MockShortUrlCommandRepositoryInterface_Save_Call) Return(_a0 error) *MockShortUrlCommandRepositoryInterface_Save_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockShortUrlCommandRepositoryInterface_Save_Call) RunAndReturn(run func(context.Context, *entities.ShortUrl) error) *MockShortUrlCommandRepositoryInterface_Save_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockShortUrlCommandRepositoryInterface creates a new instance of MockShortUrlCommandRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockShortUrlCommandRepositoryInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockShortUrlCommandRepositoryInterface {
	mock := &MockShortUrlCommandRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
