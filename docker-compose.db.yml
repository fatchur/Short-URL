version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: short-url-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migrate:
    image: golang:1.23-alpine
    container_name: short-url-db-migrate
    working_dir: /app
    volumes:
      - .:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
      - DB_TIMEZONE=${DB_TIMEZONE:-UTC}
      - DB_LOG_LEVEL=${DB_LOG_LEVEL:-silent}
    command: sh -c "cd cmd && go run . -d migrate"
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  seed:
    image: golang:1.23-alpine
    container_name: short-url-db-seed
    working_dir: /app
    volumes:
      - .:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
      - DB_TIMEZONE=${DB_TIMEZONE:-UTC}
      - DB_LOG_LEVEL=${DB_LOG_LEVEL:-silent}
    command: sh -c "cd cmd && go run . -d seed"
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: "no"

  redis:
    image: redis:7-alpine
    container_name: short-url-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data: