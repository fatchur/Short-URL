services:
  postgres:
    image: postgres:15-alpine
    container_name: user-service-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: short_url
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: golang:1.23-alpine
    container_name: user-service-migrate
    working_dir: /app
    volumes:
      - .:/app
    network_mode: host
    command: sh -c "cd cmd && go run . -d migrate"
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  seed:
    image: golang:1.23-alpine
    container_name: user-service-seed
    working_dir: /app
    volumes:
      - .:/app
    network_mode: host
    command: sh -c "cd cmd && go run . -d seed"
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: "no"

  user-service:
    image: user-service
    container_name: user-service
    network_mode: host
    depends_on:
      seed:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  postgres_data: